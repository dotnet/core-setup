{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "displayName": "run begin.sh",
      "timeoutInMinutes": 0,
      "alwaysRun": true,
      "task": {
        "id": "10f1f9a1-74b0-47ab-87bf-e3c9c68e8b0d",
        "versionSpec": "0.*",
        "definitionType": "task"
      },
      "inputs": {
        "type": "InlineScript",
        "scriptPath": "",
        "args": "",
        "cwd": "",
        "failOnStandardError": "false",
        "script": "if [ -f \"$AGENTTOOLSPATH/begin.sh\" ]; then echo \"$AGENTTOOLSPATH/begin.sh script found. Executing...\"; $AGENTTOOLSPATH/begin.sh ; else echo \"$AGENTTOOLSPATH/begin.sh script does not exist. Moving on.\" ; fi"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Remove Release Tools directory",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "rm",
        "arguments": "-rf DotNet-Core-Release-Tools",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone release tools",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(ReleaseToolsGitUrl)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Create Internal drop directory",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "mkdir",
        "arguments": "$(Build.SourcesDirectory)/AzureCoreFxDownload",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Download Azure Internal drop",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "$(ReleaseToolsDir)/msbuildrun.sh",
        "args": "--target DownloadFromAzure --properties ContainerName=$(CoreFxAzureContainer),DownloadDirectory=$(Build.SourcesDirectory)/AzureCoreFxDownload,AccountName=$(AzureAccountName),AccessToken=$(AzureAccessToken),FilterBlobNames=Release/",
        "disableAutoCwd": "false",
        "cwd": "$(ReleaseToolsDir)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Add CoreFX drop to NuGet.Config",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "$(ReleaseToolsDir)/msbuildrun.sh",
        "args": "--target AddSourceToNuGetConfig --properties NuGetConfigFile=$(Build.SourcesDirectory)/NuGet.Config,SourceName=LocalDownload,SourcePath=./AzureCoreFxDownload/Release",
        "disableAutoCwd": "false",
        "cwd": "$(ReleaseToolsDir)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Add CoreCLR drop to NuGet.Config (AzureCoreFxDownload/Release/pkg)",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "$(ReleaseToolsDir)/msbuildrun.sh",
        "args": "--target AddSourceToNuGetConfig --properties NuGetConfigFile=$(Build.SourcesDirectory)/NuGet.Config,SourceName=LocalDownload2,SourcePath=./AzureCoreFxDownload/Release/pkg",
        "disableAutoCwd": "false",
        "cwd": "$(ReleaseToolsDir)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/init-docker.sh",
        "args": "$(DockerImageName)",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Docker cleanup",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "bash",
        "arguments": "-c \"docker ps -a -q --filter name=$(DockerContainerName) | xargs --no-run-if-empty docker rm -f -v\"",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build in Docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "-t --rm --sig-proxy=true --name $(DockerContainerName) -v $(Build.SourcesDirectory):/opt/code -w /opt/code $(BuildEnvironmentVariables) $(DockerImageName) /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh $(BuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "pkg/init-tools.sh",
        "args": "",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Clean up Docker images and containers",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "perl",
        "arguments": "pkg/Tools/scripts/docker/cleanup-docker.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Remove Azure CoreFX drop directory",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "rm",
        "arguments": "-rf $(Build.SourcesDirectory)/AzureCoreFxDownload",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Remove Release Tools directory",
      "condition": "eq(variables.PB_InternalBuild, 'true')",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "rm",
        "arguments": "-rf DotNet-Core-Release-Tools",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "displayName": "run end.sh",
      "timeoutInMinutes": 0,
      "alwaysRun": true,
      "task": {
        "id": "10f1f9a1-74b0-47ab-87bf-e3c9c68e8b0d",
        "versionSpec": "0.*",
        "definitionType": "task"
      },
      "inputs": {
        "type": "InlineScript",
        "scriptPath": "",
        "args": "",
        "cwd": "",
        "failOnStandardError": "false",
        "script": "if [ -f \"$AGENTTOOLSPATH/end.sh\" ]; then echo \"$AGENTTOOLSPATH/end.sh script found. Executing...\"; $AGENTTOOLSPATH/end.sh ; else echo \"$AGENTTOOLSPATH/end.sh script does not exist. Moving on.\" ; fi"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "4777",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "BuildConfiguration": {
      "value": "Release",
      "allowOverride": true
    },
    "BuildArguments": {
      "value": "--skip-prereqs --configuration $(BuildConfiguration) --targets Default --env-vars NUGET_FEED_URL=$(NUGET_FEED_URL),NUGET_API_KEY=$(NUGET_API_KEY),GITHUB_PASSWORD=$(GITHUB_PASSWORD),REPO_PASS=$(REPO_PASS),CONNECTION_STRING='$(CONNECTION_STRING)'",
      "allowOverride": true
    },
    "BuildEnvironmentVariables": {
      "value": "-e CHANNEL -e CONNECTION_STRING -e REPO_ID -e REPO_USER -e REPO_PASS -e REPO_SERVER -e DOTNET_BUILD_SKIP_CROSSGEN -e PUBLISH_TO_AZURE_BLOB -e DOCKER_HUB_REPO -e DOCKER_HUB_TRIGGER_TOKEN -e NUGET_FEED_URL -e NUGET_API_KEY -e GITHUB_PASSWORD -e CLI_NUGET_FEED_URL -e CLI_NUGET_API_KEY",
      "allowOverride": true
    },
    "CloudDropAccessToken": {
      "value": null,
      "allowOverride": true,
      "isSecret": true
    },
    "DockerContainerName": {
      "value": "dotnetcore-setup-build-container-rhel",
      "allowOverride": true
    },
    "CONNECTION_STRING": {
      "value": "ENV_VAR_EMPTY_WORKAROUND"
    },
    "PUBLISH_TO_AZURE_BLOB": {
      "value": "false",
      "allowOverride": true
    },
    "NUGET_FEED_URL": {
      "value": "ENV_VAR_EMPTY_WORKAROUND"
    },
    "NUGET_API_KEY": {
      "value": "ENV_VAR_EMPTY_WORKAROUND"
    },
    "GITHUB_PASSWORD": {
      "value": "ENV_VAR_EMPTY_WORKAROUND"
    },
    "DockerImageName": {
      "value": "microsoft/dotnet-buildtools-prereqs:rhel7_prereqs_2"
    },
    "CoreFxAzureContainer": {
      "value": "ENV_VAR_EMPTY_WORKAROUND",
      "allowOverride": true
    },
    "AzureAccountName": {
      "value": "ENV_VAR_EMPTY_WORKAROUND"
    },
    "AzureAccessToken": {
      "value": null,
      "isSecret": true
    },
    "VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "ReleaseToolsGitUrl": {
      "value": "https://dn-bot:$(VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/DotNet-Core-Release-Tools"
    },
    "ReleaseToolsDir": {
      "value": "$(Build.SourcesDirectory)/DotNet-Core-Release-Tools"
    },
    "PB_InternalBuild": {
      "value": "false"
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 2,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(Date:yyyMMdd)$(Rev:.r)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "badgeEnabled": true,
  "repository": {
    "properties": {
      "connectedServiceId": "f4c31735-42d2-4c3a-bc47-7ac06fd0dccc",
      "apiUrl": "https://api.github.com/repos/dotnet/core-setup",
      "branchesUrl": "https://api.github.com/repos/dotnet/core-setup/branches",
      "cloneUrl": "https://github.com/dotnet/core-setup.git",
      "refsUrl": "https://api.github.com/repos/dotnet/core-setup/git/refs",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "fetchDepth": "0",
      "cleanOptions": "0"
    },
    "id": "https://github.com/dotnet/core-setup.git",
    "type": "GitHub",
    "name": "dotnet/core-setup",
    "url": "https://github.com/dotnet/core-setup.git",
    "defaultBranch": "release/1.1.0",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "queue": {
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    },
    "id": 36,
    "name": "DotNet-Build"
  },
  "path": "\\",
  "type": "build",
  "id": 3545,
  "name": "Core-Setup-RHEL7-x64",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097568
  }
}