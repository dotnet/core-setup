<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />

  <PropertyGroup>
    <FrameworkPackageName>Microsoft.NETCore.App</FrameworkPackageName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Private.CoreFx.NETCoreApp">
      <Version>$(MicrosoftPrivateCoreFxNETCoreAppPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="transport.Microsoft.NETCore.Runtime.CoreCLR">
      <Version>$(MicrosoftNETCoreRuntimeCoreCLRPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.DiaSymReader.Native">
      <Version>$(MicrosoftDiaSymReaderNativePackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.NETCore.Platforms">
      <Version>$(MicrosoftNETCorePlatformsPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.NETCore.Targets">
      <Version>$(MicrosoftNETCoreTargetsPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="NETStandard.Library">
      <Version>$(NETStandardLibraryPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="$(MicrosoftTargetingPackPrivateWinRTPackage)" ExcludeAssets="All">
      <Version>$(MicrosoftTargetingPackPrivateWinRTPackageVersion)</Version>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition="'$(NuGetRuntimeIdentifier)' == ''">
    <!-- Bring in Platforms for RID graph, NETStandard.Library for build-tools,
         Targets for an empty runtime.json to reduce conflicts from 1.x packages -->
    <DependenciesToPackage Include="NETStandard.Library" />
    <DependenciesToPackage Include="Microsoft.NETCore.Platforms" />
    <DependenciesToPackage Include="Microsoft.NETCore.Targets" />
  </ItemGroup>

  <Target Name="GetDependencyVersionFiles" DependsOnTargets="GetPackagePaths;ResolveNuGetPackages">
    <ItemGroup>
      <_coreFxVersionFile
        Include="$(PackagesDir)$([System.String]::new('%(Reference.NuGetPackageId)').ToLowerInvariant())/%(Reference.NuGetPackageVersion)/version.txt"
        Condition="$([System.String]::new('%(Reference.Identity)').ToLowerInvariant().Contains('system.runtime.dll'))"
        Name="corefx" />
      <_coreClrVersionFile
        Include="$(_runtimePackagePath)/version.txt"
        Condition="'$(NuGetRuntimeIdentifier)' != ''"
        Name="coreclr" />

      <DependencyVersionFile Include="@(_coreFxVersionFile);@(_coreClrVersionFile)" />
    </ItemGroup>

    <Error
      Condition="'@(_coreFxVersionFile)' == ''"
      Text="Failed to locate corefx version.txt file." />

    <Error
      Condition="'@(_coreClrVersionFile)' == '' AND '$(NuGetRuntimeIdentifier)' != ''"
      Text="Failed to locate coreclr version.txt file." />
  </Target>

  <!-- Fetches all the runtime items from the packages that we want to redist -->
  <Target Name="GetRuntimeFilesFromPackages" DependsOnTargets="GetPackagePaths">
    <ItemGroup Condition="'$(NuGetRuntimeIdentifier)' != ''">
      <_ToolsToPackage Include="$(_runtimePackagePath)/tools/**/*.*"/>
      <FilesToPackage Include="@(_ToolsToPackage)">
        <NuGetPackageId>$(_runtimePackageId)</NuGetPackageId>
        <TargetPath>tools/%(RecursiveDir)</TargetPath>
        <IsNative>true</IsNative>
      </FilesToPackage>
      <FilesToPackage Condition="'$(_crossDir)' != ''" Include="$(_jitPackagePath)/runtimes$(_crossDir)/native/*.*">
        <TargetPath>runtimes$(_crossDir)/native</TargetPath>
        <IsNative>true</IsNative>
      </FilesToPackage>
    </ItemGroup>
  </Target>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.targets))\dir.targets" />
</Project>
